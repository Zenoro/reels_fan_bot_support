from telebot import TeleBot
import instaloader
import re
import os
from dotenv import load_dotenv, dotenv_values
import yt_dlp
from params import *
import utils


# –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
REELS_CNT = 0
SHORTS_CNT = 0
ERR_CNT = 0


# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
values = dotenv_values()
bot = TeleBot(values['BOT_TOKEN'])

target_inst_dir = 'reels'
if not os.path.exists(target_inst_dir):
    os.makedirs(target_inst_dir)


if IS_REELS:
    print("Instagram Reels feature is enabled.")
    L = instaloader.Instaloader()
    L.login(values['INST_LOGIN'], values['INST_PASSWORD'])
    print("Logged in to Instagram as:", values['INST_LOGIN'])

    @bot.message_handler(func=lambda message: message.text.startswith(IG_URL))
    def download_and_send_inst(message):
        global REELS_CNT, ERR_CNT
        chat_id = message.chat.id
        text = message.text
        message_id = message.message_id
        thread_id = message.message_thread_id
        if (sender := message.forward_from):
            username = sender.username
        else:
            username = message.from_user.username
        bot.delete_message(chat_id, message_id)
        bot_message = bot.send_message(chat_id=chat_id,
                                    message_thread_id=thread_id,
                                    text='—â–∞ –±—É–¥–µ—Ç —Ä–∏–ª—Å...')
        matched = re.match(fr'{IG_URL}([^/]*)/\S* ?(.*)', text)
        if not matched:
            bot.edit_message_text(chat_id=chat_id,
                                message_id=bot_message.message_id,
                                text="—Ç—ã –∫–æ–≥–æ –Ω–∞–µ–±–∞—Ç—å –ø—ã—Ç–∞–µ—à—å—Å—è?")
        else:
            shortcode = matched.group(1)
            user_caption = f'—Ä–∏–ª—Å –æ—Ç @{username}'
            text_caption = matched.group(2)
            caption = text_caption + '\n' + user_caption if text_caption else user_caption
            try:
                post = instaloader.Post.from_shortcode(L.context, shortcode)
                L.download_post(post, target=target_inst_dir)
                cover = None
                for file in os.listdir(target_inst_dir):
                    if IS_THUMBS and file.endswith('.jpg'):
                        cover = open(f'{target_inst_dir}/{file}', 'rb')
                    if file.endswith('.mp4'):
                        bot.send_video(chat_id=chat_id,
                                    message_thread_id=thread_id,
                                    video=open(f'{target_inst_dir}/{file}', 'rb'),
                                    caption=caption,
                                    cover=cover)
                        bot.delete_message(chat_id, bot_message.message_id)
                        REELS_CNT += 1
                    os.remove(f'{target_inst_dir}/{file}')
            except instaloader.exceptions.InstaloaderException as e:
                ERR_CNT += 1
                bot.edit_message_text(chat_id=chat_id,
                                    message_id=bot_message.message_id,
                                    text=f'—Ä–∏–ª—Å–∞ –Ω–µ –±—É–¥–µ—Ç :(\n–æ—à–∏–±–∫–∞: {e}')
            except:
                ERR_CNT += 1
                bot.edit_message_text(chat_id=chat_id,
                                    message_id=bot_message.message_id,
                                    text='–æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∏–ª—Å–∞, –ø—É—Å—Ç—å –∞–¥–º–∏–Ω —Å–º–æ—Ç—Ä–∏—Ç –ª–æ–≥–∏')
else:
    print("Instagram Reels feature is disabled.")


if IS_SHORTS:
    print("YouTube Shorts feature is enabled.")

    @bot.message_handler(func=lambda message: message.text.startswith(YT_FULL_URL)
                        or message.text.startswith(YT_MOBILE_URL))
    def download_and_send_yt(message):
        global SHORTS_CNT, ERR_CNT
        chat_id = message.chat.id
        text = message.text
        message_id = message.message_id
        thread_id = message.message_thread_id
        youtube_url = YT_FULL_URL if YT_FULL_URL in text else YT_MOBILE_URL
        if (sender := message.forward_from):
            username = sender.username
        else:
            username = message.from_user.username
        bot.delete_message(chat_id, message_id)
        bot_message = bot.send_message(chat_id=chat_id,
                                    message_thread_id=thread_id,
                                    text='—â–∞ –±—É–¥–µ—Ç —à–æ—Ä—Ç—Å...')
        matched = re.match(fr'{youtube_url}\S* ?(.*)', text)
        if not matched:
            bot.edit_message_text(chat_id=chat_id,
                                message_id=bot_message.message_id,
                                text="—Ç—ã –∫–æ–≥–æ –Ω–∞–µ–±–∞—Ç—å –ø—ã—Ç–∞–µ—à—å—Å—è?")
        else:
            user_caption = f'—à–æ—Ä—Ç—Å –æ—Ç @{username}'
            text_caption = matched.group(1)
            caption = text_caption + '\n' + user_caption if text_caption else user_caption
            try:
                with yt_dlp.YoutubeDL(YDL_OPTS) as ydl:
                    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º
                    info = ydl.extract_info(text, download=False)
                    filename = ydl.prepare_filename(info)
                    print(f'–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: {filename}')
                    ydl.download([text])
                    cover = None
                    try:
                        if IS_THUMBS:
                            cover = open(cvrpth := utils.dwld_YTThumb(info, os.path.join(os.getcwd(), 'thumbnail.jpg')), 'rb')
                    except:
                        print("ERROR OCCURED WHILE TAKING YT SHORTS THUMBNAIL")
                bot.send_video(chat_id=chat_id,
                            message_thread_id=thread_id,
                            video=open(filename, 'rb'),
                            caption=caption,
                            cover=cover)
                bot.delete_message(chat_id, bot_message.message_id)
                os.remove(filename)
                os.remove(cvrpth)
                print(f"Shorts {filename} sent successfully.")
                SHORTS_CNT += 1
            except yt_dlp.utils.DownloadError as e:
                ERR_CNT += 1
                bot.edit_message_text(chat_id=chat_id,
                                    message_id=bot_message.message_id,
                                    text=f'—à–æ—Ä—Ç—Å–∞ –Ω–µ –±—É–¥–µ—Ç :(\n–æ—à–∏–±–∫–∞: {e}')
            except:
                ERR_CNT += 1
                bot.edit_message_text(chat_id=chat_id,
                                    message_id=bot_message.message_id,
                                    text='–æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–æ—Ä—Ç—Å–∞. –±–æ—Ç –∑–∞–Ω—è—Ç –∏–ª–∏ –ø—É—Å—Ç—å –∞–¥–º–∏–Ω —Å–º–æ—Ç—Ä–∏—Ç –ª–æ–≥–∏')
else:
    print("YouTube Shorts feature is disabled.")

if not IS_REELS and not IS_SHORTS:
    print("–ê –Ω–∞—Ö—É—è —è –≤–æ–æ–±—â–µ –∑–∞–ø—É—â–µ–Ω...")


@bot.message_handler(commands=['status'])
def send_status(message):
    chat_id = message.chat.id
    thread_id = message.message_thread_id
    bottext = f"ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –ó–∞ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:\n" \
              f"ü§§ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ä–∏–ª—Å–æ–≤: {REELS_CNT}\n" \
              f"ü©≥ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —à–æ—Ä—Ç—Å–æ–≤: {SHORTS_CNT}\n" \
              f"‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫: {ERR_CNT}"
    bot.send_message(chat_id=chat_id,
                     message_thread_id=thread_id,
                     text=bottext)


@bot.message_handler(commands=['start'])
def send_start(message):
    chat_id = message.chat.id
    thread_id = message.message_thread_id
    bottext = "ü§ñ –ü—Ä–∏–≤–µ—Ç! –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n" \
              "ü§§ /status: —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞\n"
    bot.send_message(chat_id=chat_id,
                     message_thread_id=thread_id,
                     text=bottext)


# Start polling the bot
print("Bot starting...")
bot.infinity_polling(timeout=10, long_polling_timeout=5)
